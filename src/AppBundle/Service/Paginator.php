<?php
/**
 * Created by PhpStorm.
 * User: mohamed
 * Date: 05/02/19
 * Time: 11:15 ุต
 */

namespace AppBundle\Service;

use AppBundle\Model\ISearch;
use AppBundle\Model\Service\AbstractPaginator;

class Paginator extends AbstractPaginator
{
    protected $paginationParams = [
        'start' => 0,
        'length' => ''
    ];
    public function paginate($metaClassName, $filters = array(), $getObj = false, $injectFilter = false, $orderSet = 0)
    {
        return parent::paginate($metaClassName, $filters, true, $injectFilter, $orderSet); // TODO: Change the autogenerated stub
    }

    protected function getPaginationParams()
    {
        return $this->paginationParams;
    }
    public function setPaginationParams($params = [])
    {
        $this->paginationParams = array_merge($this->paginationParams, $params);
        return $this;
    }
    protected function getOrderParams(ISearch $repository, $orderSet)
    {
        $order = array(array('column' => 0, 'dir' => 'asc'));

        $orderColumn = $repository->getOrderColumn($order[0]['column'], $orderSet);
        $orderDirection = $order[0]['dir'];
        return compact('orderColumn', 'orderDirection');
    }

    protected function getFilters(ISearch $repository, $filters)
    {
        return array_merge($repository->getFilterableFields(), $filters);
    }
}
